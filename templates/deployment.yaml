apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.env }}
  labels:
    env: {{ .Values.env }}
    app: {{ .Release.Name }}-{{ .Values.env }}
    appType: {{ .Values.labels.appType }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-{{ .Values.env }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-{{ .Values.env }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.deployment.imageAccess | default "artifact-access" }}
      restartPolicy: Always
      containers:
      - name: {{ .Release.Name }}-container
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: Always
        resources:
          requests:
            memory: "{{ .Values.resources.requestsMemory | default "64Mi" }}"
            cpu: "{{ .Values.resources.requestsCpu | default "250m" }}"
          limits:
            memory: "{{ .Values.resources.limitMemory | default "512Mi" }}"
            cpu: "{{ .Values.resources.limitCpu | default "1Gi" }}"
        envFrom:
          {{- range .Values.configmaps }}
          - configMapRef:
              name: {{ .name }}-{{ $.Values.env }}
          {{- end }}
        env:
          {{- range .Values.deployment.envSecrets }}
            {{- $secretName := .secretName }}
            {{- range .secretKeys }}
            - name: {{ . }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: {{ . }}
            {{- end }}
          {{- end }}
        ports:
          - containerPort: {{ .Values.port.internalPort }}
            protocol: TCP
        readinessProbe:
          tcpSocket:
            port: {{ .Values.port.internalPort }}
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
